package rules.forward_chain;
dialect  "mvel"

import travel_recommendation.model.User;
import travel_recommendation.model.Travel;
import travel_recommendation.model.enums.UserRank;
import java.time.LocalDate;
import java.util.List;

rule "User gets platinum rank"
    salience 5
    agenda-group "update_user_rank"
    lock-on-active
    when
        $u: User(userRank != UserRank.PLATINUM, $travelHistory: travels)
        List(size >= 5) from collect(Travel(travelDate.isAfter(LocalDate.now().minusMonths(1))) from $travelHistory)
    then
        modify($u){setUserRank(UserRank.PLATINUM)}
end

rule "User gets gold rank"
    salience 5
    agenda-group "update_user_rank"
    lock-on-active
    when
        $u: User(userRank == UserRank.SILVER || userRank == UserRank.BRONZE || userRank == UserRank.REGULAR, userRank != UserRank.GOLD, $travelHistory: travels)
        List(size >= 3) from collect(Travel(travelDate.isAfter(LocalDate.now().minusMonths(1))) from $travelHistory)
    then
        modify($u){setUserRank(UserRank.GOLD)}
end

rule "User gets silver rank"
    salience 5
    agenda-group "update_user_rank"
    lock-on-active
    when
        $u: User(userRank == UserRank.BRONZE || userRank == UserRank.REGULAR, userRank != UserRank.SILVER, $travelHistory: travels)
        List(size >= 5) from collect(Travel(travelDate.isAfter(LocalDate.now().minusMonths(3))) from $travelHistory)
    then
        modify($u){setUserRank(UserRank.SILVER)}
end

rule "User gets bronze rank"
    salience 5
    agenda-group "update_user_rank"
    lock-on-active
    when
        $u: User(userRank == UserRank.REGULAR, userRank != UserRank.BRONZE, $travelHistory: travels)
        List(size >= 3) from collect(Travel(travelDate.isAfter(LocalDate.now().minusMonths(3))) from $travelHistory)
    then
        modify($u){setUserRank(UserRank.BRONZE)}
end

rule "User gets regular rank"
    salience 5
    agenda-group "update_user_rank"
    lock-on-active
    when
        $u: User(userRank != UserRank.REGULAR, $travelHistory: travels)
        List(size < 3) from collect(Travel(travelDate.isAfter(LocalDate.now().minusMonths(3))) from $travelHistory)
    then
        modify($u){setUserRank(UserRank.REGULAR)}
end
